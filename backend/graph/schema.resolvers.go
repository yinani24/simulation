package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"fmt"
	"mat-back/database"
	"mat-back/graph/model"
)

var Mongo_db, errorMongo = database.ConnecttoMongoDB()
var Post_sql, errorPost = database.ConnecttoPostSql()

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, matrixID string, username string, email string, password string, privilidge bool) (*model.User, error) {
	panic(fmt.Errorf("not implemented: CreateUser - createUser"))
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, id string, matrixID string, username string, email string, password string, privilidge bool) (*model.User, error) {
	panic(fmt.Errorf("not implemented: UpdateUser - updateUser"))
}

// DeleteUser is the resolver for the deleteUser field.
func (r *mutationResolver) DeleteUser(ctx context.Context, id string, matrixID string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: DeleteUser - deleteUser"))
}

// CreateAdmin is the resolver for the createAdmin field.
func (r *mutationResolver) CreateAdmin(ctx context.Context, matrixID string, username string, email string, password string, privilidge bool) (*model.Admin, error) {
	panic(fmt.Errorf("not implemented: CreateAdmin - createAdmin"))
}

// UpdateAdmin is the resolver for the updateAdmin field.
func (r *mutationResolver) UpdateAdmin(ctx context.Context, id string, matrixID string, username string, email string, password string, privilidge bool) (*model.Admin, error) {
	panic(fmt.Errorf("not implemented: UpdateAdmin - updateAdmin"))
}

// CreateMatrix is the resolver for the createMatrix field.
func (r *mutationResolver) CreateMatrix(ctx context.Context, name string) (*model.Matrix, error) {
	panic(fmt.Errorf("not implemented: CreateMatrix - createMatrix"))
}

// UpdateMatrix is the resolver for the updateMatrix field.
func (r *mutationResolver) UpdateMatrix(ctx context.Context, id string, name string) (*model.Matrix, error) {
	panic(fmt.Errorf("not implemented: UpdateMatrix - updateMatrix"))
}

// DeleteMatrix is the resolver for the deleteMatrix field.
func (r *mutationResolver) DeleteMatrix(ctx context.Context, id string) (*model.Matrix, error) {
	panic(fmt.Errorf("not implemented: DeleteMatrix - deleteMatrix"))
}

// CreateBlock is the resolver for the createBlock field.
func (r *mutationResolver) CreateBlock(ctx context.Context, userID string, matrixID string, num int, nounce int, data string, prev string, current string) (*model.Block, error) {
	panic(fmt.Errorf("not implemented: CreateBlock - createBlock"))
}

// UpdateBlock is the resolver for the updateBlock field.
func (r *mutationResolver) UpdateBlock(ctx context.Context, userID string, matrixID string, num int, nounce int, data string, prev string, current string) (*model.Block, error) {
	panic(fmt.Errorf("not implemented: UpdateBlock - updateBlock"))
}

// DeleteBlock is the resolver for the deleteBlock field.
func (r *mutationResolver) DeleteBlock(ctx context.Context, userID string, matrixID string, num int) (*model.Block, error) {
	panic(fmt.Errorf("not implemented: DeleteBlock - deleteBlock"))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id string, matrixID string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Admin is the resolver for the admin field.
func (r *queryResolver) Admin(ctx context.Context, id string, matrixID string) (*model.Admin, error) {
	panic(fmt.Errorf("not implemented: Admin - admin"))
}

// Matrix is the resolver for the Matrix field.
func (r *queryResolver) Matrix(ctx context.Context, id string) (*model.Matrix, error) {
	panic(fmt.Errorf("not implemented: Matrix - Matrix"))
}

// Matrices is the resolver for the Matrices field.
func (r *queryResolver) Matrices(ctx context.Context) ([]*model.Matrix, error) {
	panic(fmt.Errorf("not implemented: Matrices - Matrices"))
}

// Blocks is the resolver for the Blocks field.
func (r *queryResolver) Blocks(ctx context.Context) ([]*model.Block, error) {
	panic(fmt.Errorf("not implemented: Blocks - Blocks"))
}

// Block is the resolver for the Block field.
func (r *queryResolver) Block(ctx context.Context, num int, matrixID string, userID string) (*model.Block, error) {
	panic(fmt.Errorf("not implemented: Block - Block"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.

